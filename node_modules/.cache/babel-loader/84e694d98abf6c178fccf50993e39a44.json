{"ast":null,"code":"var _jsxFileName = \"/Users/renatacioltea/hooks/src/containers/Cartoons/Cartoons.jsx\",\n    _s = $RefreshSig$();\n\nimport { Modal, Box, Typography } from '@mui/material';\nimport { useState } from 'react'; // import { Button } from '@mui/material';\n\nimport Grid from '@mui/material/Grid';\nimport './Modal.css';\nimport Navigation from '../../components/Navigation';\nimport CartoonCard from './CartoonCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cartoons = [{\n  name: 'Sailor Moon',\n  description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ac auctor augue mauris augue neque gravida in fermentum et. Arcu cursus euismod quis viverra nibh cras pulvinar. Id aliquet risus feugiat in. Accumsan lacus vel facilisis volutpat.',\n  image: 'https://picsum.photos/200'\n}, {\n  name: 'Tom & Jerry',\n  description: 'Blues',\n  image: 'https://picsum.photos/200'\n}, {\n  name: 'Curaj-Caine Fricos',\n  description: 'Black',\n  image: 'https://picsum.photos/200'\n}, {\n  name: 'Rick and Morty',\n  description: 'Orange',\n  image: 'https://picsum.photos/200'\n}, {\n  name: 'Cow and chicken',\n  description: 'Purple',\n  image: 'https://picsum.photos/200'\n}];\n\nfunction Cartoons() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [currentCartoon, setCurrentCartoon] = useState({});\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenModal = (title, image, description) => {\n    setOpen(!open);\n    setCurrentCartoon({\n      title,\n      image,\n      description\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      gutterBottom: true,\n      style: {\n        marginTop: 100\n      },\n      children: \"Cartoons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: cartoons.map(cartoon => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(CartoonCard, {\n            title: cartoon.name,\n            image: cartoon.image,\n            description: cartoon.description,\n            handleOpenModal: handleOpenModal\n          }, cartoon.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"modalPosition\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          className: \"modalContent\",\n          children: currentCartoon.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentCartoon.image,\n          className: \"modalContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          variant: \"body2\",\n          sx: {\n            mt: 2\n          },\n          className: \"modalContent\",\n          children: currentCartoon.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cartoons, \"Uc3nM0D7yhzTchgq4Uzsufri3YE=\");\n\n_c = Cartoons;\nexport default Cartoons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cartoons\");","map":{"version":3,"names":["Modal","Box","Typography","useState","Grid","Navigation","CartoonCard","cartoons","name","description","image","Cartoons","open","setOpen","currentCartoon","setCurrentCartoon","handleClose","handleOpenModal","title","marginTop","map","cartoon","mt"],"sources":["/Users/renatacioltea/hooks/src/containers/Cartoons/Cartoons.jsx"],"sourcesContent":["import { Modal, Box, Typography } from '@mui/material';\nimport { useState } from 'react';\n// import { Button } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport './Modal.css';\n\nimport Navigation from '../../components/Navigation';\nimport CartoonCard from './CartoonCard';\n\nconst cartoons = [\n  {\n    name: 'Sailor Moon',\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ac auctor augue mauris augue neque gravida in fermentum et. Arcu cursus euismod quis viverra nibh cras pulvinar. Id aliquet risus feugiat in. Accumsan lacus vel facilisis volutpat.',\n    image: 'https://picsum.photos/200',\n  },\n  { name: 'Tom & Jerry', description: 'Blues', image: 'https://picsum.photos/200' },\n  { name: 'Curaj-Caine Fricos', description: 'Black', image: 'https://picsum.photos/200' },\n  { name: 'Rick and Morty', description: 'Orange', image: 'https://picsum.photos/200' },\n  { name: 'Cow and chicken', description: 'Purple', image: 'https://picsum.photos/200' },\n];\n\nfunction Cartoons() {\n  const [open, setOpen] = useState(false);\n\n  const [currentCartoon, setCurrentCartoon] = useState({});\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpenModal = (title, image, description) => {\n    setOpen(!open);\n    setCurrentCartoon({ title, image, description });\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Typography variant=\"h1\" gutterBottom style={{ marginTop: 100 }}>\n        Cartoons\n      </Typography>\n      <Grid container spacing={2}>\n        {cartoons.map((cartoon) => {\n          return (\n            <Grid item xs={3}>\n              <CartoonCard\n                title={cartoon.name}\n                image={cartoon.image}\n                description={cartoon.description}\n                key={cartoon.name}\n                handleOpenModal={handleOpenModal}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className=\"modalPosition\">\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" className=\"modalContent\">\n            {currentCartoon.title}\n          </Typography>\n          <img src={currentCartoon.image} className=\"modalContent\" />\n          <Typography\n            id=\"modal-modal-description\"\n            variant=\"body2\"\n            sx={{ mt: 2 }}\n            className=\"modalContent\"\n          >\n            {currentCartoon.description}\n          </Typography>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default Cartoons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}